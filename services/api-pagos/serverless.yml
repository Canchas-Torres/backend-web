service: api-pagos

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    RECEIPTS_BUCKET_NAME: ${self:custom.receiptsBucketName}
    BOOKINGS_TABLE: BookingsTable # Coupled dependency
    JWT_SECRET: ${ssm:/canchas-app/prod/JWT_SECRET}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:PutObject"
          Resource: "arn:aws:s3:::${self:custom.receiptsBucketName}/*"
        - Effect: "Allow"
          Action:
            - "dynamodb:UpdateItem"
            - "dynamodb:GetItem"
          Resource: "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.BOOKINGS_TABLE}"
        - Effect: "Allow"
          Action: "ssm:GetParameter"
          Resource: "arn:aws:ssm:${aws:region}:${aws:accountId}:parameter/canchas-app/prod/JWT_SECRET"

custom:
  receiptsBucketName: canchas-app-receipts-${opt:stage, 'dev'}

functions:
  generateUploadUrl:
    handler: functions/generateUploadUrl.handler
    events:
      - httpApi:
          path: /payments/generate-upload-url
          method: post
  processReceipt:
    handler: functions/processReceipt.handler
    events:
      - httpApi:
          path: /payments/process-receipt
          method: post

resources:
  Resources:
    ReceiptsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.receiptsBucketName}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - '*'
              AllowedMethods:
                - PUT
                - POST
                - GET
              AllowedOrigins:
                - '*' # In a real app, lock this down to your frontend's domain
              MaxAge: 3000

    ReceiptsBucketPolicy:
       Type: AWS::S3::BucketPolicy
       Properties:
         Bucket: !Ref ReceiptsBucket
         PolicyDocument:
           Statement:
             - Sid: PublicReadGetObject
               Effect: Allow
               Principal:
                 AWS: arn:aws:iam::${aws:accountId}:root
               Action:
                 - s3:GetObject
               Resource: arn:aws:s3:::${self:custom.receiptsBucketName}/public/*
